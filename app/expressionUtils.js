define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function createNewCasesAverageExpression(currentDateFieldName, excludeGetFieldFromDate) {
        var getFieldFromDate = getFieldFromDateFunction();
        var base = "\n    var unit = 7;\n    var currentDayValueCases = $feature.Confirmed_" + currentDateFieldName + ";\n    var currentDayValueDeaths = $feature.Deaths_" + currentDateFieldName + ";\n\n    var stamp = \"" + currentDateFieldName + "\";\n    var y = Number( Left(stamp, 4) );\n    var m = Number( Mid(stamp, 4, 2) );\n    var d = Number( Right(stamp, 2) );\n    var currentDayFieldDate = Date(y,m-1,d);\n    var previousDay = DateAdd(currentDayFieldDate, (-1 * unit), 'days');\n    if (Month(previousDay) == 0 && Day(previousDay) <= 21 && Year(previousDay) == 2020){\n      return 0;\n    }\n\n    var previousDayFieldName = getFieldFromDate(previousDay);\n    var previousDayValueCases = $feature[\"Confirmed_\" + previousDayFieldName];\n    var previousDayValueDeaths = $feature[\"Deaths_\" + previousDayFieldName];\n\n    return Round((currentDayValueCases - previousDayValueCases) / unit);\n  ";
        return excludeGetFieldFromDate ? base : getFieldFromDate + base;
    }
    exports.createNewCasesAverageExpression = createNewCasesAverageExpression;
    function createNewCasesExpression(currentDateFieldName, excludeGetFieldFromDate) {
        var getFieldFromDate = getFieldFromDateFunction();
        var base = "\n    var unit = 7;\n    var currentDayValueCases = $feature.Confirmed_" + currentDateFieldName + ";\n\n    var stamp = \"" + currentDateFieldName + "\";\n    var y = Number( Left(stamp, 4) );\n    var m = Number( Mid(stamp, 4, 2) );\n    var d = Number( Right(stamp, 2) );\n    var currentDayFieldDate = Date(y,m-1,d);\n    var previousDay = DateAdd(currentDayFieldDate, (-1 * unit), 'days');\n    if (Month(previousDay) == 0 && Day(previousDay) <= 21 && Year(previousDay) == 2020){\n      return 0;\n    }\n\n    var previousDayFieldName = getFieldFromDate(previousDay);\n    var previousDayValueCases = $feature[\"Confirmed_\" + previousDayFieldName];\n\n    return (currentDayValueCases - previousDayValueCases);\n  ";
        return excludeGetFieldFromDate ? base : getFieldFromDate + base;
    }
    exports.createNewCasesExpression = createNewCasesExpression;
    function createActiveCasesExpression(currentDateFieldName, excludeGetFieldFromDate) {
        var getFieldFromDate = getFieldFromDateFunction();
        var base = "\n    var currentDayCases = $feature.Confirmed_" + currentDateFieldName + ";\n    var currentDayDeaths = $feature.Deaths_" + currentDateFieldName + ";\n\n    var stamp = \"" + currentDateFieldName + "\";\n    var y = Number( Left(stamp, 4) );\n    var m = Number( Mid(stamp, 4, 2) );\n    var d = Number( Right(stamp, 2) );\n    var currentDayFieldDate = Date(y,m-1,d);\n\n    // Active Cases = (100% of new cases from last 14 days + 19% of days 15-25 + 5% of days 26-49) - Death Count\n\n    var daysAgo14 = DateAdd(currentDayFieldDate, -14, 'days');\n    var daysAgo15 = DateAdd(currentDayFieldDate, -15, 'days');\n    var daysAgo25 = DateAdd(currentDayFieldDate, -25, 'days');\n    var daysAgo26 = DateAdd(currentDayFieldDate, -26, 'days');\n    var daysAgo49 = DateAdd(currentDayFieldDate, -49, 'days');\n\n    var startDate = Date(2020, 0, 22);\n\n    var deaths = currentDayDeaths;\n\n    if (daysAgo15 < startDate){\n      return currentDayCases - deaths;\n    }\n\n    var daysAgo14FieldName = getFieldFromDate(daysAgo14);\n    var daysAgo14Cases = $feature[\"Confirmed_\" + daysAgo14FieldName];\n    var daysAgo14Deaths = $feature[\"Deaths_\" + daysAgo14FieldName];\n\n    var daysAgo15FieldName = getFieldFromDate(daysAgo15);\n    var daysAgo15Cases = $feature[\"Confirmed_\" + daysAgo15FieldName];\n    var daysAgo15Deaths = $feature[\"Deaths_\" + daysAgo15FieldName];\n\n    if (daysAgo26 < startDate){\n      return Round( (currentDayCases - daysAgo14Cases) + ( 0.19 * daysAgo15Cases ) - deaths );\n    }\n\n    var daysAgo25FieldName = getFieldFromDate(daysAgo25);\n    var daysAgo25Cases = $feature[\"Confirmed_\" + daysAgo25FieldName];\n    var daysAgo25Deaths = $feature[\"Deaths_\" + daysAgo25FieldName];\n\n    var daysAgo26FieldName = getFieldFromDate(daysAgo26);\n    var daysAgo26Cases = $feature[\"Confirmed_\" + daysAgo26FieldName];\n    var daysAgo26Deaths = $feature[\"Deaths_\" + daysAgo26FieldName];\n\n    if (daysAgo49 < startDate){\n      return Round( (currentDayCases - daysAgo14Cases) + ( 0.19 * ( daysAgo15Cases - daysAgo25Cases ) ) + ( 0.05 * daysAgo26Cases ) - deaths );\n    }\n\n    var daysAgo49FieldName = getFieldFromDate(daysAgo49);\n    var daysAgo49Cases = $feature[\"Confirmed_\" + daysAgo49FieldName];\n    var daysAgo49Deaths = $feature[\"Deaths_\" + daysAgo49FieldName];\n\n    deaths = currentDayDeaths - daysAgo49Deaths;\n    var activeEstimate = (currentDayCases - daysAgo14Cases) + ( 0.19 * ( daysAgo15Cases - daysAgo25Cases ) ) + ( 0.05 * ( daysAgo26Cases - daysAgo49Cases) ) - deaths;\n\n    return Round(activeEstimate);\n  ";
        return excludeGetFieldFromDate ? base : getFieldFromDate + base;
    }
    exports.createActiveCasesExpression = createActiveCasesExpression;
    function createRecoveredCasesExpression(currentDateFieldName, excludeGetFieldFromDate) {
        var getFieldFromDate = getFieldFromDateFunction();
        var base = "\n    var currentDayCases = $feature.Confirmed_" + currentDateFieldName + ";\n    var currentDayDeaths = $feature.Deaths_" + currentDateFieldName + ";\n\n    var stamp = \"" + currentDateFieldName + "\";\n    var y = Number( Left(stamp, 4) );\n    var m = Number( Mid(stamp, 4, 2) );\n    var d = Number( Right(stamp, 2) );\n    var currentDayFieldDate = Date(y,m-1,d);\n\n    // Active Cases = (100% of new cases from last 14 days + 19% of days 15-25 + 5% of days 26-49) - Death Count\n\n    var daysAgo14 = DateAdd(currentDayFieldDate, -14, 'days');\n    var daysAgo15 = DateAdd(currentDayFieldDate, -15, 'days');\n    var daysAgo25 = DateAdd(currentDayFieldDate, -25, 'days');\n    var daysAgo26 = DateAdd(currentDayFieldDate, -26, 'days');\n    var daysAgo49 = DateAdd(currentDayFieldDate, -49, 'days');\n\n    var startDate = Date(2020, 0, 22);\n\n    var deaths = currentDayDeaths;\n\n    if (daysAgo15 < startDate){\n      return currentDayCases - deaths;\n    }\n\n    var daysAgo14FieldName = getFieldFromDate(daysAgo14);\n    var daysAgo14Cases = $feature[\"Confirmed_\" + daysAgo14FieldName];\n    var daysAgo14Deaths = $feature[\"Deaths_\" + daysAgo14FieldName];\n\n    var daysAgo15FieldName = getFieldFromDate(daysAgo15);\n    var daysAgo15Cases = $feature[\"Confirmed_\" + daysAgo15FieldName];\n    var daysAgo15Deaths = $feature[\"Deaths_\" + daysAgo15FieldName];\n\n    if (daysAgo26 < startDate){\n      return Round( (currentDayCases - daysAgo14Cases) + ( 0.19 * daysAgo15Cases ) - deaths );\n    }\n\n    var daysAgo25FieldName = getFieldFromDate(daysAgo25);\n    var daysAgo25Cases = $feature[\"Confirmed_\" + daysAgo25FieldName];\n    var daysAgo25Deaths = $feature[\"Deaths_\" + daysAgo25FieldName];\n\n\n    var daysAgo26FieldName = getFieldFromDate(daysAgo26);\n    var daysAgo26Cases = $feature[\"Confirmed_\" + daysAgo26FieldName];\n    var daysAgo26Deaths = $feature[\"Deaths_\" + daysAgo26FieldName];\n\n    if (daysAgo49 < startDate){\n      return Round( (currentDayCases - daysAgo14Cases) + ( 0.19 * ( daysAgo15Cases - daysAgo25Cases ) ) + ( 0.05 * daysAgo26Cases ) - deaths );\n    }\n\n    var daysAgo49FieldName = getFieldFromDate(daysAgo49);\n    var daysAgo49Cases = $feature[\"Confirmed_\" + daysAgo49FieldName];\n    var daysAgo49Deaths = $feature[\"Deaths_\" + daysAgo49FieldName];\n\n    deaths = currentDayDeaths - daysAgo49Deaths;\n    var activeEstimate = (currentDayCases - daysAgo14Cases) + ( 0.19 * ( daysAgo15Cases - daysAgo25Cases ) ) + ( 0.05 * ( daysAgo26Cases - daysAgo49Cases) ) - deaths;\n\n    return Round(currentDayCases - activeEstimate - currentDayDeaths);\n  ";
        return excludeGetFieldFromDate ? base : getFieldFromDate + base;
    }
    exports.createRecoveredCasesExpression = createRecoveredCasesExpression;
    function createDoublingTimeExpression(currentDateFieldName, excludeGetFieldFromDate) {
        var getFieldFromDate = getFieldFromDateFunction();
        var base = "\n    var unit = 14;\n    var totalCasesValue = $feature.Confirmed_" + currentDateFieldName + ";\n\n    var stamp = \"" + currentDateFieldName + "\";\n    var y = Number( Left(stamp, 4) );\n    var m = Number( Mid(stamp, 4, 2) );\n    var d = Number( Right(stamp, 2) );\n    var currentDayFieldDate = Date(y,m-1,d);\n    var previousDay = DateAdd(currentDayFieldDate, (-1 * unit), 'days');\n    if (Month(previousDay) == 0 && Day(previousDay) <= 21 && Year(previousDay) == 2020){\n      return 0;\n    }\n\n    var previousDayFieldName = getFieldFromDate(previousDay);\n    var previousDayCasesValue = $feature[\"Confirmed_\" + previousDayFieldName];\n\n    var newCases = totalCasesValue - previousDayCasesValue;\n    var oldCases = totalCasesValue - newCases;\n\n    if(newCases == 0 || oldCases == 0){\n      return 0;\n    }\n\n    var doublingTimeDays = Floor(unit / (newCases / oldCases))\n    return IIF(doublingTimeDays >= 0, doublingTimeDays, 0);\n  ";
        return excludeGetFieldFromDate ? base : getFieldFromDate + base;
    }
    exports.createDoublingTimeExpression = createDoublingTimeExpression;
    function createCaseRateExpression(currentDateFieldName) {
        return "\n    var cases = $feature.Confirmed_" + currentDateFieldName + ";\n    var population = $feature.POP2018;\n    return (cases / population ) * 100000;\n  ";
    }
    exports.createCaseRateExpression = createCaseRateExpression;
    function createDeathRate100kExpression(currentDateFieldName) {
        return "\n    var deaths = $feature.Deaths_" + currentDateFieldName + ";\n    var population = $feature.POP2018;\n    return (deaths / population ) * 100000;\n  ";
    }
    exports.createDeathRate100kExpression = createDeathRate100kExpression;
    function createActiveCasesPer100kExpression(currentDateFieldName, excludeGetFieldFromDate) {
        var getFieldFromDate = getFieldFromDateFunction();
        var base = "\n    var population = $feature.POP2018;\n\n    var currentDayCases = $feature.Confirmed_" + currentDateFieldName + ";\n    var currentDayDeaths = $feature.Deaths_" + currentDateFieldName + ";\n\n    var stamp = \"" + currentDateFieldName + "\";\n    var y = Number( Left(stamp, 4) );\n    var m = Number( Mid(stamp, 4, 2) );\n    var d = Number( Right(stamp, 2) );\n    var currentDayFieldDate = Date(y,m-1,d);\n\n    // Active Cases = (100% of new cases from last 14 days + 19% of days 15-25 + 5% of days 26-49) - Death Count\n\n    var daysAgo14 = DateAdd(currentDayFieldDate, -14, 'days');\n    var daysAgo15 = DateAdd(currentDayFieldDate, -15, 'days');\n    var daysAgo25 = DateAdd(currentDayFieldDate, -25, 'days');\n    var daysAgo26 = DateAdd(currentDayFieldDate, -26, 'days');\n    var daysAgo49 = DateAdd(currentDayFieldDate, -49, 'days');\n\n    var startDate = Date(2020, 0, 22);\n\n    var activeEstimate = 0;\n    var deaths = currentDayDeaths;\n\n    if (daysAgo15 < startDate){\n      activeEstimate = currentDayCases - deaths;\n      return (activeEstimate / population ) * 100000;\n    }\n\n    var daysAgo14FieldName = getFieldFromDate(daysAgo14);\n    var daysAgo14Cases = $feature[\"Confirmed_\" + daysAgo14FieldName];\n    var daysAgo14Deaths = $feature[\"Deaths_\" + daysAgo14FieldName];\n\n    var daysAgo15FieldName = getFieldFromDate(daysAgo15);\n    var daysAgo15Cases = $feature[\"Confirmed_\" + daysAgo15FieldName];\n    var daysAgo15Deaths = $feature[\"Deaths_\" + daysAgo15FieldName];\n\n    if (daysAgo26 < startDate){\n      activeEstimate = Round( (currentDayCases - daysAgo14Cases) + ( 0.19 * daysAgo15Cases ) - deaths );\n      return (activeEstimate / population ) * 100000;\n    }\n\n    var daysAgo25FieldName = getFieldFromDate(daysAgo25);\n    var daysAgo25Cases = $feature[\"Confirmed_\" + daysAgo25FieldName];\n    var daysAgo25Deaths = $feature[\"Deaths_\" + daysAgo25FieldName];\n\n    var daysAgo26FieldName = getFieldFromDate(daysAgo26);\n    var daysAgo26Cases = $feature[\"Confirmed_\" + daysAgo26FieldName];\n    var daysAgo26Deaths = $feature[\"Deaths_\" + daysAgo26FieldName];\n\n    if (daysAgo49 < startDate){\n      activeEstimate = Round( (currentDayCases - daysAgo14Cases) + ( 0.19 * ( daysAgo15Cases - daysAgo25Cases ) ) + ( 0.05 * daysAgo26Cases ) - deaths );\n      return (activeEstimate / population ) * 100000;\n    }\n\n    var daysAgo49FieldName = getFieldFromDate(daysAgo49);\n    var daysAgo49Cases = $feature[\"Confirmed_\" + daysAgo49FieldName];\n    var daysAgo49Deaths = $feature[\"Deaths_\" + daysAgo49FieldName];\n\n    deaths = currentDayDeaths - daysAgo49Deaths;\n    activeEstimate = (currentDayCases - daysAgo14Cases) + ( 0.19 * ( daysAgo15Cases - daysAgo25Cases ) ) + ( 0.05 * ( daysAgo26Cases - daysAgo49Cases) ) - deaths;\n\n    return (activeEstimate / population ) * 100000;\n  ";
        return excludeGetFieldFromDate ? base : getFieldFromDate + base;
    }
    exports.createActiveCasesPer100kExpression = createActiveCasesPer100kExpression;
    function createDeathRateExpression(currentDateFieldName) {
        return "\n    var cases = $feature.Confirmed_" + currentDateFieldName + ";\n    var deaths = $feature.Deaths_" + currentDateFieldName + ";\n\n    return IIF(cases <= 0, 0, (deaths / cases) * 100);\n  ";
    }
    exports.createDeathRateExpression = createDeathRateExpression;
    function createTotalDeathsExpression(currentDateFieldName) {
        return "\n    $feature.Deaths_" + currentDateFieldName + ";\n  ";
    }
    exports.createTotalDeathsExpression = createTotalDeathsExpression;
    function createTotalCasesExpression(currentDateFieldName) {
        return "\n    $feature.Confirmed_" + currentDateFieldName + ";\n  ";
    }
    exports.createTotalCasesExpression = createTotalCasesExpression;
    function createSusceptiblePopulationExpression(currentDateFieldName) {
        return "\n    var cases = $feature.Confirmed_" + currentDateFieldName + ";\n    var deaths = $feature.Confirmed_" + currentDateFieldName + ";\n\n    var population = $feature.POP2018;\n\n    return population - cases;\n  ";
    }
    exports.createSusceptiblePopulationExpression = createSusceptiblePopulationExpression;
    function getFieldFromDateFunction() {
        return "\n    function getFieldFromDate(d) {\n      var fieldName = Text(d, \"YMMDD\");\n      return fieldName;\n    }\n\n  ";
    }
    function expressionDifference(startExpression, endExpression, includeGetFieldFromDate) {
        var getFieldFromDate = getFieldFromDateFunction();
        var base = "\n    function startExpression(){\n      " + startExpression + "\n    }\n\n    function endExpression(){\n      " + endExpression + "\n    }\n\n    return endExpression() - startExpression();\n  ";
        return includeGetFieldFromDate ? getFieldFromDate + base : base;
    }
    exports.expressionDifference = expressionDifference;
    function expressionPercentChange(startExpression, endExpression, includeGetFieldFromDate) {
        var getFieldFromDate = getFieldFromDateFunction();
        var base = "\n    function startExpression(){\n      " + startExpression + "\n    }\n\n    function endExpression(){\n      " + endExpression + "\n    }\n    var startValue = startExpression();\n    var endValue = endExpression();\n\n    return ( ( endValue - startValue ) / startValue ) * 100;\n  ";
        return includeGetFieldFromDate ? getFieldFromDate + base : base;
    }
    exports.expressionPercentChange = expressionPercentChange;
});
//# sourceMappingURL=expressionUtils.js.map